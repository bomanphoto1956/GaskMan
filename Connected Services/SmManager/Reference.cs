//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GaskMan.SmManager {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LoginAdm", Namespace="http://schemas.datacontract.org/2004/07/SManApi")]
    [System.SerializableAttribute()]
    public partial class LoginAdm : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AnvIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ErrCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool canResetPyramidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int gasketLevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string identField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string pwdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string reparatorField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AnvID {
            get {
                return this.AnvIDField;
            }
            set {
                if ((object.ReferenceEquals(this.AnvIDField, value) != true)) {
                    this.AnvIDField = value;
                    this.RaisePropertyChanged("AnvID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ErrCode {
            get {
                return this.ErrCodeField;
            }
            set {
                if ((this.ErrCodeField.Equals(value) != true)) {
                    this.ErrCodeField = value;
                    this.RaisePropertyChanged("ErrCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrMessage {
            get {
                return this.ErrMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrMessageField, value) != true)) {
                    this.ErrMessageField = value;
                    this.RaisePropertyChanged("ErrMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool canResetPyramid {
            get {
                return this.canResetPyramidField;
            }
            set {
                if ((this.canResetPyramidField.Equals(value) != true)) {
                    this.canResetPyramidField = value;
                    this.RaisePropertyChanged("canResetPyramid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int gasketLevel {
            get {
                return this.gasketLevelField;
            }
            set {
                if ((this.gasketLevelField.Equals(value) != true)) {
                    this.gasketLevelField = value;
                    this.RaisePropertyChanged("gasketLevel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ident {
            get {
                return this.identField;
            }
            set {
                if ((object.ReferenceEquals(this.identField, value) != true)) {
                    this.identField = value;
                    this.RaisePropertyChanged("ident");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string pwd {
            get {
                return this.pwdField;
            }
            set {
                if ((object.ReferenceEquals(this.pwdField, value) != true)) {
                    this.pwdField = value;
                    this.RaisePropertyChanged("pwd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string reparator {
            get {
                return this.reparatorField;
            }
            set {
                if ((object.ReferenceEquals(this.reparatorField, value) != true)) {
                    this.reparatorField = value;
                    this.RaisePropertyChanged("reparator");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ListServHuvCL", Namespace="http://schemas.datacontract.org/2004/07/SManApi")]
    [System.SerializableAttribute()]
    public partial class ListServHuvCL : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ErrCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ert_ordernrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string kundField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string orderDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string orderLabelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string pyramidErrorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string reparator_msgField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool sentToPyramidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string vart_ordernrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string week_msgField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ErrCode {
            get {
                return this.ErrCodeField;
            }
            set {
                if ((this.ErrCodeField.Equals(value) != true)) {
                    this.ErrCodeField = value;
                    this.RaisePropertyChanged("ErrCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrMessage {
            get {
                return this.ErrMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrMessageField, value) != true)) {
                    this.ErrMessageField = value;
                    this.RaisePropertyChanged("ErrMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ert_ordernr {
            get {
                return this.ert_ordernrField;
            }
            set {
                if ((object.ReferenceEquals(this.ert_ordernrField, value) != true)) {
                    this.ert_ordernrField = value;
                    this.RaisePropertyChanged("ert_ordernr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string kund {
            get {
                return this.kundField;
            }
            set {
                if ((object.ReferenceEquals(this.kundField, value) != true)) {
                    this.kundField = value;
                    this.RaisePropertyChanged("kund");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string orderDate {
            get {
                return this.orderDateField;
            }
            set {
                if ((object.ReferenceEquals(this.orderDateField, value) != true)) {
                    this.orderDateField = value;
                    this.RaisePropertyChanged("orderDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string orderLabel {
            get {
                return this.orderLabelField;
            }
            set {
                if ((object.ReferenceEquals(this.orderLabelField, value) != true)) {
                    this.orderLabelField = value;
                    this.RaisePropertyChanged("orderLabel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string pyramidError {
            get {
                return this.pyramidErrorField;
            }
            set {
                if ((object.ReferenceEquals(this.pyramidErrorField, value) != true)) {
                    this.pyramidErrorField = value;
                    this.RaisePropertyChanged("pyramidError");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string reparator_msg {
            get {
                return this.reparator_msgField;
            }
            set {
                if ((object.ReferenceEquals(this.reparator_msgField, value) != true)) {
                    this.reparator_msgField = value;
                    this.RaisePropertyChanged("reparator_msg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool sentToPyramid {
            get {
                return this.sentToPyramidField;
            }
            set {
                if ((this.sentToPyramidField.Equals(value) != true)) {
                    this.sentToPyramidField = value;
                    this.RaisePropertyChanged("sentToPyramid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string vart_ordernr {
            get {
                return this.vart_ordernrField;
            }
            set {
                if ((object.ReferenceEquals(this.vart_ordernrField, value) != true)) {
                    this.vart_ordernrField = value;
                    this.RaisePropertyChanged("vart_ordernr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string week_msg {
            get {
                return this.week_msgField;
            }
            set {
                if ((object.ReferenceEquals(this.week_msgField, value) != true)) {
                    this.week_msgField = value;
                    this.RaisePropertyChanged("week_msg");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServHuvCL", Namespace="http://schemas.datacontract.org/2004/07/SManApi")]
    [System.SerializableAttribute()]
    public partial class ServHuvCL : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AllRepField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ErrCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Ert_ordernrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime FromDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool GodkandField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime Godkand_datField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsNewField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KundField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool OpenForAppField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrderAdminField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime OrderDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ToDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Vart_ordernrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string generalNoteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int momskodField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string orderLabelField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AllRep {
            get {
                return this.AllRepField;
            }
            set {
                if ((this.AllRepField.Equals(value) != true)) {
                    this.AllRepField = value;
                    this.RaisePropertyChanged("AllRep");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ErrCode {
            get {
                return this.ErrCodeField;
            }
            set {
                if ((this.ErrCodeField.Equals(value) != true)) {
                    this.ErrCodeField = value;
                    this.RaisePropertyChanged("ErrCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrMessage {
            get {
                return this.ErrMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrMessageField, value) != true)) {
                    this.ErrMessageField = value;
                    this.RaisePropertyChanged("ErrMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Ert_ordernr {
            get {
                return this.Ert_ordernrField;
            }
            set {
                if ((object.ReferenceEquals(this.Ert_ordernrField, value) != true)) {
                    this.Ert_ordernrField = value;
                    this.RaisePropertyChanged("Ert_ordernr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime FromDate {
            get {
                return this.FromDateField;
            }
            set {
                if ((this.FromDateField.Equals(value) != true)) {
                    this.FromDateField = value;
                    this.RaisePropertyChanged("FromDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Godkand {
            get {
                return this.GodkandField;
            }
            set {
                if ((this.GodkandField.Equals(value) != true)) {
                    this.GodkandField = value;
                    this.RaisePropertyChanged("Godkand");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Godkand_dat {
            get {
                return this.Godkand_datField;
            }
            set {
                if ((this.Godkand_datField.Equals(value) != true)) {
                    this.Godkand_datField = value;
                    this.RaisePropertyChanged("Godkand_dat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsNew {
            get {
                return this.IsNewField;
            }
            set {
                if ((this.IsNewField.Equals(value) != true)) {
                    this.IsNewField = value;
                    this.RaisePropertyChanged("IsNew");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Kund {
            get {
                return this.KundField;
            }
            set {
                if ((object.ReferenceEquals(this.KundField, value) != true)) {
                    this.KundField = value;
                    this.RaisePropertyChanged("Kund");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool OpenForApp {
            get {
                return this.OpenForAppField;
            }
            set {
                if ((this.OpenForAppField.Equals(value) != true)) {
                    this.OpenForAppField = value;
                    this.RaisePropertyChanged("OpenForApp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrderAdmin {
            get {
                return this.OrderAdminField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderAdminField, value) != true)) {
                    this.OrderAdminField = value;
                    this.RaisePropertyChanged("OrderAdmin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime OrderDate {
            get {
                return this.OrderDateField;
            }
            set {
                if ((this.OrderDateField.Equals(value) != true)) {
                    this.OrderDateField = value;
                    this.RaisePropertyChanged("OrderDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ToDate {
            get {
                return this.ToDateField;
            }
            set {
                if ((this.ToDateField.Equals(value) != true)) {
                    this.ToDateField = value;
                    this.RaisePropertyChanged("ToDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Vart_ordernr {
            get {
                return this.Vart_ordernrField;
            }
            set {
                if ((object.ReferenceEquals(this.Vart_ordernrField, value) != true)) {
                    this.Vart_ordernrField = value;
                    this.RaisePropertyChanged("Vart_ordernr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string generalNote {
            get {
                return this.generalNoteField;
            }
            set {
                if ((object.ReferenceEquals(this.generalNoteField, value) != true)) {
                    this.generalNoteField = value;
                    this.RaisePropertyChanged("generalNote");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int momskod {
            get {
                return this.momskodField;
            }
            set {
                if ((this.momskodField.Equals(value) != true)) {
                    this.momskodField = value;
                    this.RaisePropertyChanged("momskod");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string orderLabel {
            get {
                return this.orderLabelField;
            }
            set {
                if ((object.ReferenceEquals(this.orderLabelField, value) != true)) {
                    this.orderLabelField = value;
                    this.RaisePropertyChanged("orderLabel");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ListRepCL", Namespace="http://schemas.datacontract.org/2004/07/SManApi")]
    [System.SerializableAttribute()]
    public partial class ListRepCL : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AnvIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ErrCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReparatorField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AnvId {
            get {
                return this.AnvIdField;
            }
            set {
                if ((object.ReferenceEquals(this.AnvIdField, value) != true)) {
                    this.AnvIdField = value;
                    this.RaisePropertyChanged("AnvId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ErrCode {
            get {
                return this.ErrCodeField;
            }
            set {
                if ((this.ErrCodeField.Equals(value) != true)) {
                    this.ErrCodeField = value;
                    this.RaisePropertyChanged("ErrCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrMessage {
            get {
                return this.ErrMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrMessageField, value) != true)) {
                    this.ErrMessageField = value;
                    this.RaisePropertyChanged("ErrMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Reparator {
            get {
                return this.ReparatorField;
            }
            set {
                if ((object.ReferenceEquals(this.ReparatorField, value) != true)) {
                    this.ReparatorField = value;
                    this.RaisePropertyChanged("Reparator");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ListKundCL", Namespace="http://schemas.datacontract.org/2004/07/SManApi")]
    [System.SerializableAttribute()]
    public partial class ListKundCL : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ErrCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string kundField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string kund_idField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ErrCode {
            get {
                return this.ErrCodeField;
            }
            set {
                if ((this.ErrCodeField.Equals(value) != true)) {
                    this.ErrCodeField = value;
                    this.RaisePropertyChanged("ErrCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrMessage {
            get {
                return this.ErrMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrMessageField, value) != true)) {
                    this.ErrMessageField = value;
                    this.RaisePropertyChanged("ErrMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string kund {
            get {
                return this.kundField;
            }
            set {
                if ((object.ReferenceEquals(this.kundField, value) != true)) {
                    this.kundField = value;
                    this.RaisePropertyChanged("kund");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string kund_id {
            get {
                return this.kund_idField;
            }
            set {
                if ((object.ReferenceEquals(this.kund_idField, value) != true)) {
                    this.kund_idField = value;
                    this.RaisePropertyChanged("kund_id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ErrorCL", Namespace="http://schemas.datacontract.org/2004/07/SManApi")]
    [System.SerializableAttribute()]
    public partial class ErrorCL : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ErrCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrMessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ErrCode {
            get {
                return this.ErrCodeField;
            }
            set {
                if ((this.ErrCodeField.Equals(value) != true)) {
                    this.ErrCodeField = value;
                    this.RaisePropertyChanged("ErrCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrMessage {
            get {
                return this.ErrMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrMessageField, value) != true)) {
                    this.ErrMessageField = value;
                    this.RaisePropertyChanged("ErrMessage");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ShReparatorCL", Namespace="http://schemas.datacontract.org/2004/07/SManApi")]
    [System.SerializableAttribute()]
    public partial class ShReparatorCL : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AnvIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ErrCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VartOrdernrField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AnvID {
            get {
                return this.AnvIDField;
            }
            set {
                if ((object.ReferenceEquals(this.AnvIDField, value) != true)) {
                    this.AnvIDField = value;
                    this.RaisePropertyChanged("AnvID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ErrCode {
            get {
                return this.ErrCodeField;
            }
            set {
                if ((this.ErrCodeField.Equals(value) != true)) {
                    this.ErrCodeField = value;
                    this.RaisePropertyChanged("ErrCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrMessage {
            get {
                return this.ErrMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrMessageField, value) != true)) {
                    this.ErrMessageField = value;
                    this.RaisePropertyChanged("ErrMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VartOrdernr {
            get {
                return this.VartOrdernrField;
            }
            set {
                if ((object.ReferenceEquals(this.VartOrdernrField, value) != true)) {
                    this.VartOrdernrField = value;
                    this.RaisePropertyChanged("VartOrdernr");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OrderArtCL", Namespace="http://schemas.datacontract.org/2004/07/SManApi")]
    [System.SerializableAttribute()]
    public partial class OrderArtCL : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ArtNamnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ArtikelkodField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ArtnrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CiAntalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CoAntalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ErrCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal OrdAntalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderArtIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal StockField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TempCiAntalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VartOrdernrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string noteField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ArtNamn {
            get {
                return this.ArtNamnField;
            }
            set {
                if ((object.ReferenceEquals(this.ArtNamnField, value) != true)) {
                    this.ArtNamnField = value;
                    this.RaisePropertyChanged("ArtNamn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Artikelkod {
            get {
                return this.ArtikelkodField;
            }
            set {
                if ((object.ReferenceEquals(this.ArtikelkodField, value) != true)) {
                    this.ArtikelkodField = value;
                    this.RaisePropertyChanged("Artikelkod");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Artnr {
            get {
                return this.ArtnrField;
            }
            set {
                if ((object.ReferenceEquals(this.ArtnrField, value) != true)) {
                    this.ArtnrField = value;
                    this.RaisePropertyChanged("Artnr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal CiAntal {
            get {
                return this.CiAntalField;
            }
            set {
                if ((this.CiAntalField.Equals(value) != true)) {
                    this.CiAntalField = value;
                    this.RaisePropertyChanged("CiAntal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal CoAntal {
            get {
                return this.CoAntalField;
            }
            set {
                if ((this.CoAntalField.Equals(value) != true)) {
                    this.CoAntalField = value;
                    this.RaisePropertyChanged("CoAntal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ErrCode {
            get {
                return this.ErrCodeField;
            }
            set {
                if ((this.ErrCodeField.Equals(value) != true)) {
                    this.ErrCodeField = value;
                    this.RaisePropertyChanged("ErrCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrMessage {
            get {
                return this.ErrMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrMessageField, value) != true)) {
                    this.ErrMessageField = value;
                    this.RaisePropertyChanged("ErrMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal OrdAntal {
            get {
                return this.OrdAntalField;
            }
            set {
                if ((this.OrdAntalField.Equals(value) != true)) {
                    this.OrdAntalField = value;
                    this.RaisePropertyChanged("OrdAntal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderArtId {
            get {
                return this.OrderArtIdField;
            }
            set {
                if ((this.OrderArtIdField.Equals(value) != true)) {
                    this.OrderArtIdField = value;
                    this.RaisePropertyChanged("OrderArtId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Stock {
            get {
                return this.StockField;
            }
            set {
                if ((this.StockField.Equals(value) != true)) {
                    this.StockField = value;
                    this.RaisePropertyChanged("Stock");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TempCiAntal {
            get {
                return this.TempCiAntalField;
            }
            set {
                if ((this.TempCiAntalField.Equals(value) != true)) {
                    this.TempCiAntalField = value;
                    this.RaisePropertyChanged("TempCiAntal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VartOrdernr {
            get {
                return this.VartOrdernrField;
            }
            set {
                if ((object.ReferenceEquals(this.VartOrdernrField, value) != true)) {
                    this.VartOrdernrField = value;
                    this.RaisePropertyChanged("VartOrdernr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string note {
            get {
                return this.noteField;
            }
            set {
                if ((object.ReferenceEquals(this.noteField, value) != true)) {
                    this.noteField = value;
                    this.RaisePropertyChanged("note");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MomskodCL", Namespace="http://schemas.datacontract.org/2004/07/SManApi")]
    [System.SerializableAttribute()]
    public partial class MomskodCL : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ErrCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MomskodField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MomskodIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ErrCode {
            get {
                return this.ErrCodeField;
            }
            set {
                if ((this.ErrCodeField.Equals(value) != true)) {
                    this.ErrCodeField = value;
                    this.RaisePropertyChanged("ErrCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrMessage {
            get {
                return this.ErrMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrMessageField, value) != true)) {
                    this.ErrMessageField = value;
                    this.RaisePropertyChanged("ErrMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Momskod {
            get {
                return this.MomskodField;
            }
            set {
                if ((object.ReferenceEquals(this.MomskodField, value) != true)) {
                    this.MomskodField = value;
                    this.RaisePropertyChanged("Momskod");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MomskodId {
            get {
                return this.MomskodIdField;
            }
            set {
                if ((this.MomskodIdField.Equals(value) != true)) {
                    this.MomskodIdField = value;
                    this.RaisePropertyChanged("MomskodId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OrderArtListCL", Namespace="http://schemas.datacontract.org/2004/07/SManApi")]
    [System.SerializableAttribute()]
    public partial class OrderArtListCL : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ErrCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ansvarigField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int antalCoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int antalOrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string artnamnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string artnrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string vartOrdernrField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ErrCode {
            get {
                return this.ErrCodeField;
            }
            set {
                if ((this.ErrCodeField.Equals(value) != true)) {
                    this.ErrCodeField = value;
                    this.RaisePropertyChanged("ErrCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrMessage {
            get {
                return this.ErrMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrMessageField, value) != true)) {
                    this.ErrMessageField = value;
                    this.RaisePropertyChanged("ErrMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ansvarig {
            get {
                return this.ansvarigField;
            }
            set {
                if ((object.ReferenceEquals(this.ansvarigField, value) != true)) {
                    this.ansvarigField = value;
                    this.RaisePropertyChanged("ansvarig");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int antalCo {
            get {
                return this.antalCoField;
            }
            set {
                if ((this.antalCoField.Equals(value) != true)) {
                    this.antalCoField = value;
                    this.RaisePropertyChanged("antalCo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int antalOrder {
            get {
                return this.antalOrderField;
            }
            set {
                if ((this.antalOrderField.Equals(value) != true)) {
                    this.antalOrderField = value;
                    this.RaisePropertyChanged("antalOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string artnamn {
            get {
                return this.artnamnField;
            }
            set {
                if ((object.ReferenceEquals(this.artnamnField, value) != true)) {
                    this.artnamnField = value;
                    this.RaisePropertyChanged("artnamn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string artnr {
            get {
                return this.artnrField;
            }
            set {
                if ((object.ReferenceEquals(this.artnrField, value) != true)) {
                    this.artnrField = value;
                    this.RaisePropertyChanged("artnr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string vartOrdernr {
            get {
                return this.vartOrdernrField;
            }
            set {
                if ((object.ReferenceEquals(this.vartOrdernrField, value) != true)) {
                    this.vartOrdernrField = value;
                    this.RaisePropertyChanged("vartOrdernr");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="gMaterialCL", Namespace="http://schemas.datacontract.org/2004/07/SManApi")]
    [System.SerializableAttribute()]
    public partial class gMaterialCL : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ErrCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string materialField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int materialIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string materialShortField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ErrCode {
            get {
                return this.ErrCodeField;
            }
            set {
                if ((this.ErrCodeField.Equals(value) != true)) {
                    this.ErrCodeField = value;
                    this.RaisePropertyChanged("ErrCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrMessage {
            get {
                return this.ErrMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrMessageField, value) != true)) {
                    this.ErrMessageField = value;
                    this.RaisePropertyChanged("ErrMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string material {
            get {
                return this.materialField;
            }
            set {
                if ((object.ReferenceEquals(this.materialField, value) != true)) {
                    this.materialField = value;
                    this.RaisePropertyChanged("material");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int materialId {
            get {
                return this.materialIdField;
            }
            set {
                if ((this.materialIdField.Equals(value) != true)) {
                    this.materialIdField = value;
                    this.RaisePropertyChanged("materialId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string materialShort {
            get {
                return this.materialShortField;
            }
            set {
                if ((object.ReferenceEquals(this.materialShortField, value) != true)) {
                    this.materialShortField = value;
                    this.RaisePropertyChanged("materialShort");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="gMaterialSizeCL", Namespace="http://schemas.datacontract.org/2004/07/SManApi")]
    [System.SerializableAttribute()]
    public partial class gMaterialSizeCL : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ErrCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool defaultValField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string descriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int materialIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal materialLengthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string materialNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int materialSizeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal materialWidthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string sizeShortField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ErrCode {
            get {
                return this.ErrCodeField;
            }
            set {
                if ((this.ErrCodeField.Equals(value) != true)) {
                    this.ErrCodeField = value;
                    this.RaisePropertyChanged("ErrCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrMessage {
            get {
                return this.ErrMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrMessageField, value) != true)) {
                    this.ErrMessageField = value;
                    this.RaisePropertyChanged("ErrMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool defaultVal {
            get {
                return this.defaultValField;
            }
            set {
                if ((this.defaultValField.Equals(value) != true)) {
                    this.defaultValField = value;
                    this.RaisePropertyChanged("defaultVal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.descriptionField, value) != true)) {
                    this.descriptionField = value;
                    this.RaisePropertyChanged("description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int materialId {
            get {
                return this.materialIdField;
            }
            set {
                if ((this.materialIdField.Equals(value) != true)) {
                    this.materialIdField = value;
                    this.RaisePropertyChanged("materialId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal materialLength {
            get {
                return this.materialLengthField;
            }
            set {
                if ((this.materialLengthField.Equals(value) != true)) {
                    this.materialLengthField = value;
                    this.RaisePropertyChanged("materialLength");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string materialName {
            get {
                return this.materialNameField;
            }
            set {
                if ((object.ReferenceEquals(this.materialNameField, value) != true)) {
                    this.materialNameField = value;
                    this.RaisePropertyChanged("materialName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int materialSizeId {
            get {
                return this.materialSizeIdField;
            }
            set {
                if ((this.materialSizeIdField.Equals(value) != true)) {
                    this.materialSizeIdField = value;
                    this.RaisePropertyChanged("materialSizeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal materialWidth {
            get {
                return this.materialWidthField;
            }
            set {
                if ((this.materialWidthField.Equals(value) != true)) {
                    this.materialWidthField = value;
                    this.RaisePropertyChanged("materialWidth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string sizeShort {
            get {
                return this.sizeShortField;
            }
            set {
                if ((object.ReferenceEquals(this.sizeShortField, value) != true)) {
                    this.sizeShortField = value;
                    this.RaisePropertyChanged("sizeShort");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="gMaterialThicknCL", Namespace="http://schemas.datacontract.org/2004/07/SManApi")]
    [System.SerializableAttribute()]
    public partial class gMaterialThicknCL : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ErrCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal buyPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal cuttingTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string descriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string materialNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string materialSizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int materialSizeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int materialThicknIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal sellPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string thicknShortField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal thicknessField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ErrCode {
            get {
                return this.ErrCodeField;
            }
            set {
                if ((this.ErrCodeField.Equals(value) != true)) {
                    this.ErrCodeField = value;
                    this.RaisePropertyChanged("ErrCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrMessage {
            get {
                return this.ErrMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrMessageField, value) != true)) {
                    this.ErrMessageField = value;
                    this.RaisePropertyChanged("ErrMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal buyPrice {
            get {
                return this.buyPriceField;
            }
            set {
                if ((this.buyPriceField.Equals(value) != true)) {
                    this.buyPriceField = value;
                    this.RaisePropertyChanged("buyPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal cuttingTime {
            get {
                return this.cuttingTimeField;
            }
            set {
                if ((this.cuttingTimeField.Equals(value) != true)) {
                    this.cuttingTimeField = value;
                    this.RaisePropertyChanged("cuttingTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.descriptionField, value) != true)) {
                    this.descriptionField = value;
                    this.RaisePropertyChanged("description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string materialName {
            get {
                return this.materialNameField;
            }
            set {
                if ((object.ReferenceEquals(this.materialNameField, value) != true)) {
                    this.materialNameField = value;
                    this.RaisePropertyChanged("materialName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string materialSize {
            get {
                return this.materialSizeField;
            }
            set {
                if ((object.ReferenceEquals(this.materialSizeField, value) != true)) {
                    this.materialSizeField = value;
                    this.RaisePropertyChanged("materialSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int materialSizeId {
            get {
                return this.materialSizeIdField;
            }
            set {
                if ((this.materialSizeIdField.Equals(value) != true)) {
                    this.materialSizeIdField = value;
                    this.RaisePropertyChanged("materialSizeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int materialThicknId {
            get {
                return this.materialThicknIdField;
            }
            set {
                if ((this.materialThicknIdField.Equals(value) != true)) {
                    this.materialThicknIdField = value;
                    this.RaisePropertyChanged("materialThicknId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal sellPrice {
            get {
                return this.sellPriceField;
            }
            set {
                if ((this.sellPriceField.Equals(value) != true)) {
                    this.sellPriceField = value;
                    this.RaisePropertyChanged("sellPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string thicknShort {
            get {
                return this.thicknShortField;
            }
            set {
                if ((object.ReferenceEquals(this.thicknShortField, value) != true)) {
                    this.thicknShortField = value;
                    this.RaisePropertyChanged("thicknShort");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal thickness {
            get {
                return this.thicknessField;
            }
            set {
                if ((this.thicknessField.Equals(value) != true)) {
                    this.thicknessField = value;
                    this.RaisePropertyChanged("thickness");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="gWorkingCostCL", Namespace="http://schemas.datacontract.org/2004/07/SManApi")]
    [System.SerializableAttribute()]
    public partial class gWorkingCostCL : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ErrCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal cuttingHourNetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal cuttingHourSalesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal cuttingMarginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal handlingHourNetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal handlingHourSalesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int workingCostIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ErrCode {
            get {
                return this.ErrCodeField;
            }
            set {
                if ((this.ErrCodeField.Equals(value) != true)) {
                    this.ErrCodeField = value;
                    this.RaisePropertyChanged("ErrCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrMessage {
            get {
                return this.ErrMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrMessageField, value) != true)) {
                    this.ErrMessageField = value;
                    this.RaisePropertyChanged("ErrMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal cuttingHourNet {
            get {
                return this.cuttingHourNetField;
            }
            set {
                if ((this.cuttingHourNetField.Equals(value) != true)) {
                    this.cuttingHourNetField = value;
                    this.RaisePropertyChanged("cuttingHourNet");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal cuttingHourSales {
            get {
                return this.cuttingHourSalesField;
            }
            set {
                if ((this.cuttingHourSalesField.Equals(value) != true)) {
                    this.cuttingHourSalesField = value;
                    this.RaisePropertyChanged("cuttingHourSales");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal cuttingMargin {
            get {
                return this.cuttingMarginField;
            }
            set {
                if ((this.cuttingMarginField.Equals(value) != true)) {
                    this.cuttingMarginField = value;
                    this.RaisePropertyChanged("cuttingMargin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal handlingHourNet {
            get {
                return this.handlingHourNetField;
            }
            set {
                if ((this.handlingHourNetField.Equals(value) != true)) {
                    this.handlingHourNetField = value;
                    this.RaisePropertyChanged("handlingHourNet");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal handlingHourSales {
            get {
                return this.handlingHourSalesField;
            }
            set {
                if ((this.handlingHourSalesField.Equals(value) != true)) {
                    this.handlingHourSalesField = value;
                    this.RaisePropertyChanged("handlingHourSales");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int workingCostId {
            get {
                return this.workingCostIdField;
            }
            set {
                if ((this.workingCostIdField.Equals(value) != true)) {
                    this.workingCostIdField = value;
                    this.RaisePropertyChanged("workingCostId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="gGasketCL", Namespace="http://schemas.datacontract.org/2004/07/SManApi")]
    [System.SerializableAttribute()]
    public partial class gGasketCL : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ErrCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Type2SecHoleCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Type2SecHoleDiamField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Type3GasketLengthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Type3GasketWidthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double cuttingLengthInnerMmField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double cuttingLengthOuterMmField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal cuttingMarginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double cuttingSpeedMmSekField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string descriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int gasketIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int gasketTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string gasketTypeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal handlingTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal innerDiamField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double materialAreaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double materialCostMm2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double materialMarginPercentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string materialNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string materialSizeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int materialThicknIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string materialThicknNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string noteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal outerDiamField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal priceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal reusableMaterialField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool standardPriceProductField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ErrCode {
            get {
                return this.ErrCodeField;
            }
            set {
                if ((this.ErrCodeField.Equals(value) != true)) {
                    this.ErrCodeField = value;
                    this.RaisePropertyChanged("ErrCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrMessage {
            get {
                return this.ErrMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrMessageField, value) != true)) {
                    this.ErrMessageField = value;
                    this.RaisePropertyChanged("ErrMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Type2SecHoleCount {
            get {
                return this.Type2SecHoleCountField;
            }
            set {
                if ((this.Type2SecHoleCountField.Equals(value) != true)) {
                    this.Type2SecHoleCountField = value;
                    this.RaisePropertyChanged("Type2SecHoleCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Type2SecHoleDiam {
            get {
                return this.Type2SecHoleDiamField;
            }
            set {
                if ((this.Type2SecHoleDiamField.Equals(value) != true)) {
                    this.Type2SecHoleDiamField = value;
                    this.RaisePropertyChanged("Type2SecHoleDiam");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Type3GasketLength {
            get {
                return this.Type3GasketLengthField;
            }
            set {
                if ((this.Type3GasketLengthField.Equals(value) != true)) {
                    this.Type3GasketLengthField = value;
                    this.RaisePropertyChanged("Type3GasketLength");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Type3GasketWidth {
            get {
                return this.Type3GasketWidthField;
            }
            set {
                if ((this.Type3GasketWidthField.Equals(value) != true)) {
                    this.Type3GasketWidthField = value;
                    this.RaisePropertyChanged("Type3GasketWidth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double cuttingLengthInnerMm {
            get {
                return this.cuttingLengthInnerMmField;
            }
            set {
                if ((this.cuttingLengthInnerMmField.Equals(value) != true)) {
                    this.cuttingLengthInnerMmField = value;
                    this.RaisePropertyChanged("cuttingLengthInnerMm");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double cuttingLengthOuterMm {
            get {
                return this.cuttingLengthOuterMmField;
            }
            set {
                if ((this.cuttingLengthOuterMmField.Equals(value) != true)) {
                    this.cuttingLengthOuterMmField = value;
                    this.RaisePropertyChanged("cuttingLengthOuterMm");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal cuttingMargin {
            get {
                return this.cuttingMarginField;
            }
            set {
                if ((this.cuttingMarginField.Equals(value) != true)) {
                    this.cuttingMarginField = value;
                    this.RaisePropertyChanged("cuttingMargin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double cuttingSpeedMmSek {
            get {
                return this.cuttingSpeedMmSekField;
            }
            set {
                if ((this.cuttingSpeedMmSekField.Equals(value) != true)) {
                    this.cuttingSpeedMmSekField = value;
                    this.RaisePropertyChanged("cuttingSpeedMmSek");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.descriptionField, value) != true)) {
                    this.descriptionField = value;
                    this.RaisePropertyChanged("description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int gasketId {
            get {
                return this.gasketIdField;
            }
            set {
                if ((this.gasketIdField.Equals(value) != true)) {
                    this.gasketIdField = value;
                    this.RaisePropertyChanged("gasketId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int gasketTypeId {
            get {
                return this.gasketTypeIdField;
            }
            set {
                if ((this.gasketTypeIdField.Equals(value) != true)) {
                    this.gasketTypeIdField = value;
                    this.RaisePropertyChanged("gasketTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string gasketTypeName {
            get {
                return this.gasketTypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.gasketTypeNameField, value) != true)) {
                    this.gasketTypeNameField = value;
                    this.RaisePropertyChanged("gasketTypeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal handlingTime {
            get {
                return this.handlingTimeField;
            }
            set {
                if ((this.handlingTimeField.Equals(value) != true)) {
                    this.handlingTimeField = value;
                    this.RaisePropertyChanged("handlingTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal innerDiam {
            get {
                return this.innerDiamField;
            }
            set {
                if ((this.innerDiamField.Equals(value) != true)) {
                    this.innerDiamField = value;
                    this.RaisePropertyChanged("innerDiam");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double materialArea {
            get {
                return this.materialAreaField;
            }
            set {
                if ((this.materialAreaField.Equals(value) != true)) {
                    this.materialAreaField = value;
                    this.RaisePropertyChanged("materialArea");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double materialCostMm2 {
            get {
                return this.materialCostMm2Field;
            }
            set {
                if ((this.materialCostMm2Field.Equals(value) != true)) {
                    this.materialCostMm2Field = value;
                    this.RaisePropertyChanged("materialCostMm2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double materialMarginPercent {
            get {
                return this.materialMarginPercentField;
            }
            set {
                if ((this.materialMarginPercentField.Equals(value) != true)) {
                    this.materialMarginPercentField = value;
                    this.RaisePropertyChanged("materialMarginPercent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string materialName {
            get {
                return this.materialNameField;
            }
            set {
                if ((object.ReferenceEquals(this.materialNameField, value) != true)) {
                    this.materialNameField = value;
                    this.RaisePropertyChanged("materialName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string materialSizeName {
            get {
                return this.materialSizeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.materialSizeNameField, value) != true)) {
                    this.materialSizeNameField = value;
                    this.RaisePropertyChanged("materialSizeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int materialThicknId {
            get {
                return this.materialThicknIdField;
            }
            set {
                if ((this.materialThicknIdField.Equals(value) != true)) {
                    this.materialThicknIdField = value;
                    this.RaisePropertyChanged("materialThicknId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string materialThicknName {
            get {
                return this.materialThicknNameField;
            }
            set {
                if ((object.ReferenceEquals(this.materialThicknNameField, value) != true)) {
                    this.materialThicknNameField = value;
                    this.RaisePropertyChanged("materialThicknName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string note {
            get {
                return this.noteField;
            }
            set {
                if ((object.ReferenceEquals(this.noteField, value) != true)) {
                    this.noteField = value;
                    this.RaisePropertyChanged("note");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal outerDiam {
            get {
                return this.outerDiamField;
            }
            set {
                if ((this.outerDiamField.Equals(value) != true)) {
                    this.outerDiamField = value;
                    this.RaisePropertyChanged("outerDiam");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal price {
            get {
                return this.priceField;
            }
            set {
                if ((this.priceField.Equals(value) != true)) {
                    this.priceField = value;
                    this.RaisePropertyChanged("price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal reusableMaterial {
            get {
                return this.reusableMaterialField;
            }
            set {
                if ((this.reusableMaterialField.Equals(value) != true)) {
                    this.reusableMaterialField = value;
                    this.RaisePropertyChanged("reusableMaterial");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool standardPriceProduct {
            get {
                return this.standardPriceProductField;
            }
            set {
                if ((this.standardPriceProductField.Equals(value) != true)) {
                    this.standardPriceProductField = value;
                    this.RaisePropertyChanged("standardPriceProduct");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="gReuseMatCL", Namespace="http://schemas.datacontract.org/2004/07/SManApi")]
    [System.SerializableAttribute()]
    public partial class gReuseMatCL : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ErrCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal maxDiamField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal minDiamField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int reuseMatIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal reusePercentageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ErrCode {
            get {
                return this.ErrCodeField;
            }
            set {
                if ((this.ErrCodeField.Equals(value) != true)) {
                    this.ErrCodeField = value;
                    this.RaisePropertyChanged("ErrCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrMessage {
            get {
                return this.ErrMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrMessageField, value) != true)) {
                    this.ErrMessageField = value;
                    this.RaisePropertyChanged("ErrMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal maxDiam {
            get {
                return this.maxDiamField;
            }
            set {
                if ((this.maxDiamField.Equals(value) != true)) {
                    this.maxDiamField = value;
                    this.RaisePropertyChanged("maxDiam");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal minDiam {
            get {
                return this.minDiamField;
            }
            set {
                if ((this.minDiamField.Equals(value) != true)) {
                    this.minDiamField = value;
                    this.RaisePropertyChanged("minDiam");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int reuseMatId {
            get {
                return this.reuseMatIdField;
            }
            set {
                if ((this.reuseMatIdField.Equals(value) != true)) {
                    this.reuseMatIdField = value;
                    this.RaisePropertyChanged("reuseMatId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal reusePercentage {
            get {
                return this.reusePercentageField;
            }
            set {
                if ((this.reusePercentageField.Equals(value) != true)) {
                    this.reusePercentageField = value;
                    this.RaisePropertyChanged("reusePercentage");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="resendOrderArtCL", Namespace="http://schemas.datacontract.org/2004/07/SManApi")]
    [System.SerializableAttribute()]
    public partial class resendOrderArtCL : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ErrCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int total_countField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int total_handledField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string vartOrdernrField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ErrCode {
            get {
                return this.ErrCodeField;
            }
            set {
                if ((this.ErrCodeField.Equals(value) != true)) {
                    this.ErrCodeField = value;
                    this.RaisePropertyChanged("ErrCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrMessage {
            get {
                return this.ErrMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrMessageField, value) != true)) {
                    this.ErrMessageField = value;
                    this.RaisePropertyChanged("ErrMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int total_count {
            get {
                return this.total_countField;
            }
            set {
                if ((this.total_countField.Equals(value) != true)) {
                    this.total_countField = value;
                    this.RaisePropertyChanged("total_count");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int total_handled {
            get {
                return this.total_handledField;
            }
            set {
                if ((this.total_handledField.Equals(value) != true)) {
                    this.total_handledField = value;
                    this.RaisePropertyChanged("total_handled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string vartOrdernr {
            get {
                return this.vartOrdernrField;
            }
            set {
                if ((object.ReferenceEquals(this.vartOrdernrField, value) != true)) {
                    this.vartOrdernrField = value;
                    this.RaisePropertyChanged("vartOrdernr");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="pyramidChangeCL", Namespace="http://schemas.datacontract.org/2004/07/SManApi")]
    [System.SerializableAttribute()]
    public partial class pyramidChangeCL : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ChangeTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ChangeTypeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ErrCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string regField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string regNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime regdateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string vartOrdernrField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ChangeTypeId {
            get {
                return this.ChangeTypeIdField;
            }
            set {
                if ((this.ChangeTypeIdField.Equals(value) != true)) {
                    this.ChangeTypeIdField = value;
                    this.RaisePropertyChanged("ChangeTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ChangeTypeName {
            get {
                return this.ChangeTypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ChangeTypeNameField, value) != true)) {
                    this.ChangeTypeNameField = value;
                    this.RaisePropertyChanged("ChangeTypeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ErrCode {
            get {
                return this.ErrCodeField;
            }
            set {
                if ((this.ErrCodeField.Equals(value) != true)) {
                    this.ErrCodeField = value;
                    this.RaisePropertyChanged("ErrCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrMessage {
            get {
                return this.ErrMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrMessageField, value) != true)) {
                    this.ErrMessageField = value;
                    this.RaisePropertyChanged("ErrMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string reg {
            get {
                return this.regField;
            }
            set {
                if ((object.ReferenceEquals(this.regField, value) != true)) {
                    this.regField = value;
                    this.RaisePropertyChanged("reg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string regName {
            get {
                return this.regNameField;
            }
            set {
                if ((object.ReferenceEquals(this.regNameField, value) != true)) {
                    this.regNameField = value;
                    this.RaisePropertyChanged("regName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime regdate {
            get {
                return this.regdateField;
            }
            set {
                if ((this.regdateField.Equals(value) != true)) {
                    this.regdateField = value;
                    this.RaisePropertyChanged("regdate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string vartOrdernr {
            get {
                return this.vartOrdernrField;
            }
            set {
                if ((object.ReferenceEquals(this.vartOrdernrField, value) != true)) {
                    this.vartOrdernrField = value;
                    this.RaisePropertyChanged("vartOrdernr");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SmManager.ISmManager")]
    public interface ISmManager {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmManager/DoWork", ReplyAction="http://tempuri.org/ISmManager/DoWorkResponse")]
        void DoWork();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmManager/DoWork", ReplyAction="http://tempuri.org/ISmManager/DoWorkResponse")]
        System.Threading.Tasks.Task DoWorkAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmManager/loginAdmin", ReplyAction="http://tempuri.org/ISmManager/loginAdminResponse")]
        GaskMan.SmManager.LoginAdm loginAdmin(GaskMan.SmManager.LoginAdm login);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmManager/loginAdmin", ReplyAction="http://tempuri.org/ISmManager/loginAdminResponse")]
        System.Threading.Tasks.Task<GaskMan.SmManager.LoginAdm> loginAdminAsync(GaskMan.SmManager.LoginAdm login);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmManager/getServHuv", ReplyAction="http://tempuri.org/ISmManager/getServHuvResponse")]
        GaskMan.SmManager.ListServHuvCL[] getServHuv(string ident, int selType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmManager/getServHuv", ReplyAction="http://tempuri.org/ISmManager/getServHuvResponse")]
        System.Threading.Tasks.Task<GaskMan.SmManager.ListServHuvCL[]> getServHuvAsync(string ident, int selType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmManager/getServiceHuvud", ReplyAction="http://tempuri.org/ISmManager/getServiceHuvudResponse")]
        GaskMan.SmManager.ServHuvCL getServiceHuvud(GaskMan.SmManager.ServHuvCL sh, string ident);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmManager/getServiceHuvud", ReplyAction="http://tempuri.org/ISmManager/getServiceHuvudResponse")]
        System.Threading.Tasks.Task<GaskMan.SmManager.ServHuvCL> getServiceHuvudAsync(GaskMan.SmManager.ServHuvCL sh, string ident);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmManager/getReparatorList", ReplyAction="http://tempuri.org/ISmManager/getReparatorListResponse")]
        GaskMan.SmManager.ListRepCL[] getReparatorList(string ident);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmManager/getReparatorList", ReplyAction="http://tempuri.org/ISmManager/getReparatorListResponse")]
        System.Threading.Tasks.Task<GaskMan.SmManager.ListRepCL[]> getReparatorListAsync(string ident);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmManager/getCustList", ReplyAction="http://tempuri.org/ISmManager/getCustListResponse")]
        GaskMan.SmManager.ListKundCL[] getCustList(string ident);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmManager/getCustList", ReplyAction="http://tempuri.org/ISmManager/getCustListResponse")]
        System.Threading.Tasks.Task<GaskMan.SmManager.ListKundCL[]> getCustListAsync(string ident);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmManager/saveServHuv", ReplyAction="http://tempuri.org/ISmManager/saveServHuvResponse")]
        GaskMan.SmManager.ServHuvCL saveServHuv(GaskMan.SmManager.ServHuvCL sh, string ident);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmManager/saveServHuv", ReplyAction="http://tempuri.org/ISmManager/saveServHuvResponse")]
        System.Threading.Tasks.Task<GaskMan.SmManager.ServHuvCL> saveServHuvAsync(GaskMan.SmManager.ServHuvCL sh, string ident);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmManager/toggleApprove", ReplyAction="http://tempuri.org/ISmManager/toggleApproveResponse")]
        GaskMan.SmManager.ErrorCL toggleApprove(int id, bool approve, string ident);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmManager/toggleApprove", ReplyAction="http://tempuri.org/ISmManager/toggleApproveResponse")]
        System.Threading.Tasks.Task<GaskMan.SmManager.ErrorCL> toggleApproveAsync(int id, bool approve, string ident);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmManager/getShReparatorList", ReplyAction="http://tempuri.org/ISmManager/getShReparatorListResponse")]
        GaskMan.SmManager.ShReparatorCL[] getShReparatorList(string VartOrdernr, string ident);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmManager/getShReparatorList", ReplyAction="http://tempuri.org/ISmManager/getShReparatorListResponse")]
        System.Threading.Tasks.Task<GaskMan.SmManager.ShReparatorCL[]> getShReparatorListAsync(string VartOrdernr, string ident);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmManager/updateShrep", ReplyAction="http://tempuri.org/ISmManager/updateShrepResponse")]
        GaskMan.SmManager.ErrorCL updateShrep(string ident, string VartOrdernr, string AnvID, bool addToOrder);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmManager/updateShrep", ReplyAction="http://tempuri.org/ISmManager/updateShrepResponse")]
        System.Threading.Tasks.Task<GaskMan.SmManager.ErrorCL> updateShrepAsync(string ident, string VartOrdernr, string AnvID, bool addToOrder);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmManager/countReparator", ReplyAction="http://tempuri.org/ISmManager/countReparatorResponse")]
        int countReparator(string vart_ordernr, string ident);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmManager/countReparator", ReplyAction="http://tempuri.org/ISmManager/countReparatorResponse")]
        System.Threading.Tasks.Task<int> countReparatorAsync(string vart_ordernr, string ident);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmManager/updateAllRep", ReplyAction="http://tempuri.org/ISmManager/updateAllRepResponse")]
        GaskMan.SmManager.ServHuvCL updateAllRep(string VartOrdernr, bool allRep, string ident);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmManager/updateAllRep", ReplyAction="http://tempuri.org/ISmManager/updateAllRepResponse")]
        System.Threading.Tasks.Task<GaskMan.SmManager.ServHuvCL> updateAllRepAsync(string VartOrdernr, bool allRep, string ident);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmManager/getOrderArt", ReplyAction="http://tempuri.org/ISmManager/getOrderArtResponse")]
        GaskMan.SmManager.OrderArtCL[] getOrderArt(int orderArtId, string vartOrdernr, string ident);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmManager/getOrderArt", ReplyAction="http://tempuri.org/ISmManager/getOrderArtResponse")]
        System.Threading.Tasks.Task<GaskMan.SmManager.OrderArtCL[]> getOrderArtAsync(int orderArtId, string vartOrdernr, string ident);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmManager/checkoutOrderArt", ReplyAction="http://tempuri.org/ISmManager/checkoutOrderArtResponse")]
        GaskMan.SmManager.OrderArtCL checkoutOrderArt(string ident, GaskMan.SmManager.OrderArtCL oa);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmManager/checkoutOrderArt", ReplyAction="http://tempuri.org/ISmManager/checkoutOrderArtResponse")]
        System.Threading.Tasks.Task<GaskMan.SmManager.OrderArtCL> checkoutOrderArtAsync(string ident, GaskMan.SmManager.OrderArtCL oa);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmManager/getCheckoutableArticles", ReplyAction="http://tempuri.org/ISmManager/getCheckoutableArticlesResponse")]
        GaskMan.SmManager.OrderArtCL[] getCheckoutableArticles(string ident, string artnr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmManager/getCheckoutableArticles", ReplyAction="http://tempuri.org/ISmManager/getCheckoutableArticlesResponse")]
        System.Threading.Tasks.Task<GaskMan.SmManager.OrderArtCL[]> getCheckoutableArticlesAsync(string ident, string artnr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmManager/genCompStoreData", ReplyAction="http://tempuri.org/ISmManager/genCompStoreDataResponse")]
        GaskMan.SmManager.ErrorCL genCompStoreData(string ident, string vartOrdernr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmManager/genCompStoreData", ReplyAction="http://tempuri.org/ISmManager/genCompStoreDataResponse")]
        System.Threading.Tasks.Task<GaskMan.SmManager.ErrorCL> genCompStoreDataAsync(string ident, string vartOrdernr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmManager/countArtForStorageAut", ReplyAction="http://tempuri.org/ISmManager/countArtForStorageAutResponse")]
        decimal countArtForStorageAut(string ident, string vartOrdernr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmManager/countArtForStorageAut", ReplyAction="http://tempuri.org/ISmManager/countArtForStorageAutResponse")]
        System.Threading.Tasks.Task<decimal> countArtForStorageAutAsync(string ident, string vartOrdernr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmManager/getNextOrderNumber", ReplyAction="http://tempuri.org/ISmManager/getNextOrderNumberResponse")]
        string getNextOrderNumber();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmManager/getNextOrderNumber", ReplyAction="http://tempuri.org/ISmManager/getNextOrderNumberResponse")]
        System.Threading.Tasks.Task<string> getNextOrderNumberAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmManager/getMomskoder", ReplyAction="http://tempuri.org/ISmManager/getMomskoderResponse")]
        GaskMan.SmManager.MomskodCL[] getMomskoder(string ident);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmManager/getMomskoder", ReplyAction="http://tempuri.org/ISmManager/getMomskoderResponse")]
        System.Threading.Tasks.Task<GaskMan.SmManager.MomskodCL[]> getMomskoderAsync(string ident);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmManager/countOrderArtRows", ReplyAction="http://tempuri.org/ISmManager/countOrderArtRowsResponse")]
        int countOrderArtRows(string ident, string vartOrdernr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmManager/countOrderArtRows", ReplyAction="http://tempuri.org/ISmManager/countOrderArtRowsResponse")]
        System.Threading.Tasks.Task<int> countOrderArtRowsAsync(string ident, string vartOrdernr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmManager/calculateCiOrderArt", ReplyAction="http://tempuri.org/ISmManager/calculateCiOrderArtResponse")]
        GaskMan.SmManager.ErrorCL calculateCiOrderArt(string ident, string vartOrdernr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmManager/calculateCiOrderArt", ReplyAction="http://tempuri.org/ISmManager/calculateCiOrderArtResponse")]
        System.Threading.Tasks.Task<GaskMan.SmManager.ErrorCL> calculateCiOrderArtAsync(string ident, string vartOrdernr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmManager/setTempCiAntal", ReplyAction="http://tempuri.org/ISmManager/setTempCiAntalResponse")]
        GaskMan.SmManager.ErrorCL setTempCiAntal(string ident, int orderArtId, decimal newValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmManager/setTempCiAntal", ReplyAction="http://tempuri.org/ISmManager/setTempCiAntalResponse")]
        System.Threading.Tasks.Task<GaskMan.SmManager.ErrorCL> setTempCiAntalAsync(string ident, int orderArtId, decimal newValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmManager/commitTempCiAntal", ReplyAction="http://tempuri.org/ISmManager/commitTempCiAntalResponse")]
        GaskMan.SmManager.ErrorCL commitTempCiAntal(string ident, string vartOrdernr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmManager/commitTempCiAntal", ReplyAction="http://tempuri.org/ISmManager/commitTempCiAntalResponse")]
        System.Threading.Tasks.Task<GaskMan.SmManager.ErrorCL> commitTempCiAntalAsync(string ident, string vartOrdernr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmManager/exportTime", ReplyAction="http://tempuri.org/ISmManager/exportTimeResponse")]
        GaskMan.SmManager.ErrorCL exportTime(string vartOrdernr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmManager/exportTime", ReplyAction="http://tempuri.org/ISmManager/exportTimeResponse")]
        System.Threading.Tasks.Task<GaskMan.SmManager.ErrorCL> exportTimeAsync(string vartOrdernr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmManager/getCheckoutableArticle", ReplyAction="http://tempuri.org/ISmManager/getCheckoutableArticleResponse")]
        GaskMan.SmManager.OrderArtCL getCheckoutableArticle(string ident, string artnr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmManager/getCheckoutableArticle", ReplyAction="http://tempuri.org/ISmManager/getCheckoutableArticleResponse")]
        System.Threading.Tasks.Task<GaskMan.SmManager.OrderArtCL> getCheckoutableArticleAsync(string ident, string artnr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmManager/getUcArtListSelection", ReplyAction="http://tempuri.org/ISmManager/getUcArtListSelectionResponse")]
        System.Collections.Generic.KeyValuePair<int, string>[] getUcArtListSelection(string ident);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmManager/getUcArtListSelection", ReplyAction="http://tempuri.org/ISmManager/getUcArtListSelectionResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.KeyValuePair<int, string>[]> getUcArtListSelectionAsync(string ident);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmManager/getOutcheckedList", ReplyAction="http://tempuri.org/ISmManager/getOutcheckedListResponse")]
        GaskMan.SmManager.OrderArtListCL[] getOutcheckedList(string ident, int listType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmManager/getOutcheckedList", ReplyAction="http://tempuri.org/ISmManager/getOutcheckedListResponse")]
        System.Threading.Tasks.Task<GaskMan.SmManager.OrderArtListCL[]> getOutcheckedListAsync(string ident, int listType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmManager/getExportListSelection", ReplyAction="http://tempuri.org/ISmManager/getExportListSelectionResponse")]
        System.Collections.Generic.KeyValuePair<int, string>[] getExportListSelection(string ident);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmManager/getExportListSelection", ReplyAction="http://tempuri.org/ISmManager/getExportListSelectionResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.KeyValuePair<int, string>[]> getExportListSelectionAsync(string ident);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmManager/getExportFullList", ReplyAction="http://tempuri.org/ISmManager/getExportFullListResponse")]
        GaskMan.SmManager.OrderArtCL[] getExportFullList(string ident, string vartOrdernr, int listType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmManager/getExportFullList", ReplyAction="http://tempuri.org/ISmManager/getExportFullListResponse")]
        System.Threading.Tasks.Task<GaskMan.SmManager.OrderArtCL[]> getExportFullListAsync(string ident, string vartOrdernr, int listType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmManager/logMessage", ReplyAction="http://tempuri.org/ISmManager/logMessageResponse")]
        void logMessage(int logLevel, string message, string messageDescr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmManager/logMessage", ReplyAction="http://tempuri.org/ISmManager/logMessageResponse")]
        System.Threading.Tasks.Task logMessageAsync(int logLevel, string message, string messageDescr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmManager/GLogin", ReplyAction="http://tempuri.org/ISmManager/GLoginResponse")]
        GaskMan.SmManager.LoginAdm GLogin(GaskMan.SmManager.LoginAdm login);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmManager/GLogin", ReplyAction="http://tempuri.org/ISmManager/GLoginResponse")]
        System.Threading.Tasks.Task<GaskMan.SmManager.LoginAdm> GLoginAsync(GaskMan.SmManager.LoginAdm login);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmManager/getAllMaterial", ReplyAction="http://tempuri.org/ISmManager/getAllMaterialResponse")]
        GaskMan.SmManager.gMaterialCL[] getAllMaterial(string ident);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmManager/getAllMaterial", ReplyAction="http://tempuri.org/ISmManager/getAllMaterialResponse")]
        System.Threading.Tasks.Task<GaskMan.SmManager.gMaterialCL[]> getAllMaterialAsync(string ident);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmManager/getMaterial", ReplyAction="http://tempuri.org/ISmManager/getMaterialResponse")]
        GaskMan.SmManager.gMaterialCL[] getMaterial(string ident, int materialId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmManager/getMaterial", ReplyAction="http://tempuri.org/ISmManager/getMaterialResponse")]
        System.Threading.Tasks.Task<GaskMan.SmManager.gMaterialCL[]> getMaterialAsync(string ident, int materialId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmManager/saveMaterial", ReplyAction="http://tempuri.org/ISmManager/saveMaterialResponse")]
        GaskMan.SmManager.gMaterialCL saveMaterial(string ident, GaskMan.SmManager.gMaterialCL mat);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmManager/saveMaterial", ReplyAction="http://tempuri.org/ISmManager/saveMaterialResponse")]
        System.Threading.Tasks.Task<GaskMan.SmManager.gMaterialCL> saveMaterialAsync(string ident, GaskMan.SmManager.gMaterialCL mat);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmManager/getMaterialSize", ReplyAction="http://tempuri.org/ISmManager/getMaterialSizeResponse")]
        GaskMan.SmManager.gMaterialSizeCL[] getMaterialSize(string ident, int materialSizeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmManager/getMaterialSize", ReplyAction="http://tempuri.org/ISmManager/getMaterialSizeResponse")]
        System.Threading.Tasks.Task<GaskMan.SmManager.gMaterialSizeCL[]> getMaterialSizeAsync(string ident, int materialSizeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmManager/saveMaterialSize", ReplyAction="http://tempuri.org/ISmManager/saveMaterialSizeResponse")]
        GaskMan.SmManager.gMaterialSizeCL saveMaterialSize(string ident, GaskMan.SmManager.gMaterialSizeCL matSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmManager/saveMaterialSize", ReplyAction="http://tempuri.org/ISmManager/saveMaterialSizeResponse")]
        System.Threading.Tasks.Task<GaskMan.SmManager.gMaterialSizeCL> saveMaterialSizeAsync(string ident, GaskMan.SmManager.gMaterialSizeCL matSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmManager/getMaterialThickn", ReplyAction="http://tempuri.org/ISmManager/getMaterialThicknResponse")]
        GaskMan.SmManager.gMaterialThicknCL[] getMaterialThickn(string ident, int materialThicknId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmManager/getMaterialThickn", ReplyAction="http://tempuri.org/ISmManager/getMaterialThicknResponse")]
        System.Threading.Tasks.Task<GaskMan.SmManager.gMaterialThicknCL[]> getMaterialThicknAsync(string ident, int materialThicknId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmManager/saveMaterialThickness", ReplyAction="http://tempuri.org/ISmManager/saveMaterialThicknessResponse")]
        GaskMan.SmManager.gMaterialThicknCL saveMaterialThickness(string ident, GaskMan.SmManager.gMaterialThicknCL thickn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmManager/saveMaterialThickness", ReplyAction="http://tempuri.org/ISmManager/saveMaterialThicknessResponse")]
        System.Threading.Tasks.Task<GaskMan.SmManager.gMaterialThicknCL> saveMaterialThicknessAsync(string ident, GaskMan.SmManager.gMaterialThicknCL thickn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmManager/getWorkingCosts", ReplyAction="http://tempuri.org/ISmManager/getWorkingCostsResponse")]
        GaskMan.SmManager.gWorkingCostCL getWorkingCosts(string ident);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmManager/getWorkingCosts", ReplyAction="http://tempuri.org/ISmManager/getWorkingCostsResponse")]
        System.Threading.Tasks.Task<GaskMan.SmManager.gWorkingCostCL> getWorkingCostsAsync(string ident);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmManager/saveWorkingCost", ReplyAction="http://tempuri.org/ISmManager/saveWorkingCostResponse")]
        GaskMan.SmManager.gWorkingCostCL saveWorkingCost(string ident, GaskMan.SmManager.gWorkingCostCL wc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmManager/saveWorkingCost", ReplyAction="http://tempuri.org/ISmManager/saveWorkingCostResponse")]
        System.Threading.Tasks.Task<GaskMan.SmManager.gWorkingCostCL> saveWorkingCostAsync(string ident, GaskMan.SmManager.gWorkingCostCL wc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmManager/getGasket", ReplyAction="http://tempuri.org/ISmManager/getGasketResponse")]
        GaskMan.SmManager.gGasketCL[] getGasket(string ident, int gasketId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmManager/getGasket", ReplyAction="http://tempuri.org/ISmManager/getGasketResponse")]
        System.Threading.Tasks.Task<GaskMan.SmManager.gGasketCL[]> getGasketAsync(string ident, int gasketId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmManager/saveGasket", ReplyAction="http://tempuri.org/ISmManager/saveGasketResponse")]
        GaskMan.SmManager.gGasketCL saveGasket(string ident, GaskMan.SmManager.gGasketCL gasket);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmManager/saveGasket", ReplyAction="http://tempuri.org/ISmManager/saveGasketResponse")]
        System.Threading.Tasks.Task<GaskMan.SmManager.gGasketCL> saveGasketAsync(string ident, GaskMan.SmManager.gGasketCL gasket);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmManager/deleteGasket", ReplyAction="http://tempuri.org/ISmManager/deleteGasketResponse")]
        GaskMan.SmManager.ErrorCL deleteGasket(string ident, int gasketId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmManager/deleteGasket", ReplyAction="http://tempuri.org/ISmManager/deleteGasketResponse")]
        System.Threading.Tasks.Task<GaskMan.SmManager.ErrorCL> deleteGasketAsync(string ident, int gasketId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmManager/getGasketType", ReplyAction="http://tempuri.org/ISmManager/getGasketTypeResponse")]
        System.Collections.Generic.KeyValuePair<int, string>[] getGasketType(string ident);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmManager/getGasketType", ReplyAction="http://tempuri.org/ISmManager/getGasketTypeResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.KeyValuePair<int, string>[]> getGasketTypeAsync(string ident);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmManager/getReuseMaterial", ReplyAction="http://tempuri.org/ISmManager/getReuseMaterialResponse")]
        GaskMan.SmManager.gReuseMatCL[] getReuseMaterial(string ident, int reuseMatId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmManager/getReuseMaterial", ReplyAction="http://tempuri.org/ISmManager/getReuseMaterialResponse")]
        System.Threading.Tasks.Task<GaskMan.SmManager.gReuseMatCL[]> getReuseMaterialAsync(string ident, int reuseMatId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmManager/saveReuseMaterial", ReplyAction="http://tempuri.org/ISmManager/saveReuseMaterialResponse")]
        GaskMan.SmManager.gReuseMatCL saveReuseMaterial(string ident, GaskMan.SmManager.gReuseMatCL reuseMat);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmManager/saveReuseMaterial", ReplyAction="http://tempuri.org/ISmManager/saveReuseMaterialResponse")]
        System.Threading.Tasks.Task<GaskMan.SmManager.gReuseMatCL> saveReuseMaterialAsync(string ident, GaskMan.SmManager.gReuseMatCL reuseMat);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmManager/getReusablePercentage", ReplyAction="http://tempuri.org/ISmManager/getReusablePercentageResponse")]
        GaskMan.SmManager.gReuseMatCL getReusablePercentage(string ident, decimal innerSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmManager/getReusablePercentage", ReplyAction="http://tempuri.org/ISmManager/getReusablePercentageResponse")]
        System.Threading.Tasks.Task<GaskMan.SmManager.gReuseMatCL> getReusablePercentageAsync(string ident, decimal innerSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmManager/resetExport", ReplyAction="http://tempuri.org/ISmManager/resetExportResponse")]
        GaskMan.SmManager.ErrorCL resetExport(string aVart_ordernr, string ident);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmManager/resetExport", ReplyAction="http://tempuri.org/ISmManager/resetExportResponse")]
        System.Threading.Tasks.Task<GaskMan.SmManager.ErrorCL> resetExportAsync(string aVart_ordernr, string ident);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmManager/resendxOrderArt", ReplyAction="http://tempuri.org/ISmManager/resendxOrderArtResponse")]
        GaskMan.SmManager.resendOrderArtCL resendxOrderArt(string aVart_ordernr, int noToResend, string ident);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmManager/resendxOrderArt", ReplyAction="http://tempuri.org/ISmManager/resendxOrderArtResponse")]
        System.Threading.Tasks.Task<GaskMan.SmManager.resendOrderArtCL> resendxOrderArtAsync(string aVart_ordernr, int noToResend, string ident);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmManager/getPyramidChange", ReplyAction="http://tempuri.org/ISmManager/getPyramidChangeResponse")]
        GaskMan.SmManager.pyramidChangeCL[] getPyramidChange(string ident, string vartOrdernr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmManager/getPyramidChange", ReplyAction="http://tempuri.org/ISmManager/getPyramidChangeResponse")]
        System.Threading.Tasks.Task<GaskMan.SmManager.pyramidChangeCL[]> getPyramidChangeAsync(string ident, string vartOrdernr);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISmManagerChannel : GaskMan.SmManager.ISmManager, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SmManagerClient : System.ServiceModel.ClientBase<GaskMan.SmManager.ISmManager>, GaskMan.SmManager.ISmManager {
        
        public SmManagerClient() {
        }
        
        public SmManagerClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SmManagerClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SmManagerClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SmManagerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void DoWork() {
            base.Channel.DoWork();
        }
        
        public System.Threading.Tasks.Task DoWorkAsync() {
            return base.Channel.DoWorkAsync();
        }
        
        public GaskMan.SmManager.LoginAdm loginAdmin(GaskMan.SmManager.LoginAdm login) {
            return base.Channel.loginAdmin(login);
        }
        
        public System.Threading.Tasks.Task<GaskMan.SmManager.LoginAdm> loginAdminAsync(GaskMan.SmManager.LoginAdm login) {
            return base.Channel.loginAdminAsync(login);
        }
        
        public GaskMan.SmManager.ListServHuvCL[] getServHuv(string ident, int selType) {
            return base.Channel.getServHuv(ident, selType);
        }
        
        public System.Threading.Tasks.Task<GaskMan.SmManager.ListServHuvCL[]> getServHuvAsync(string ident, int selType) {
            return base.Channel.getServHuvAsync(ident, selType);
        }
        
        public GaskMan.SmManager.ServHuvCL getServiceHuvud(GaskMan.SmManager.ServHuvCL sh, string ident) {
            return base.Channel.getServiceHuvud(sh, ident);
        }
        
        public System.Threading.Tasks.Task<GaskMan.SmManager.ServHuvCL> getServiceHuvudAsync(GaskMan.SmManager.ServHuvCL sh, string ident) {
            return base.Channel.getServiceHuvudAsync(sh, ident);
        }
        
        public GaskMan.SmManager.ListRepCL[] getReparatorList(string ident) {
            return base.Channel.getReparatorList(ident);
        }
        
        public System.Threading.Tasks.Task<GaskMan.SmManager.ListRepCL[]> getReparatorListAsync(string ident) {
            return base.Channel.getReparatorListAsync(ident);
        }
        
        public GaskMan.SmManager.ListKundCL[] getCustList(string ident) {
            return base.Channel.getCustList(ident);
        }
        
        public System.Threading.Tasks.Task<GaskMan.SmManager.ListKundCL[]> getCustListAsync(string ident) {
            return base.Channel.getCustListAsync(ident);
        }
        
        public GaskMan.SmManager.ServHuvCL saveServHuv(GaskMan.SmManager.ServHuvCL sh, string ident) {
            return base.Channel.saveServHuv(sh, ident);
        }
        
        public System.Threading.Tasks.Task<GaskMan.SmManager.ServHuvCL> saveServHuvAsync(GaskMan.SmManager.ServHuvCL sh, string ident) {
            return base.Channel.saveServHuvAsync(sh, ident);
        }
        
        public GaskMan.SmManager.ErrorCL toggleApprove(int id, bool approve, string ident) {
            return base.Channel.toggleApprove(id, approve, ident);
        }
        
        public System.Threading.Tasks.Task<GaskMan.SmManager.ErrorCL> toggleApproveAsync(int id, bool approve, string ident) {
            return base.Channel.toggleApproveAsync(id, approve, ident);
        }
        
        public GaskMan.SmManager.ShReparatorCL[] getShReparatorList(string VartOrdernr, string ident) {
            return base.Channel.getShReparatorList(VartOrdernr, ident);
        }
        
        public System.Threading.Tasks.Task<GaskMan.SmManager.ShReparatorCL[]> getShReparatorListAsync(string VartOrdernr, string ident) {
            return base.Channel.getShReparatorListAsync(VartOrdernr, ident);
        }
        
        public GaskMan.SmManager.ErrorCL updateShrep(string ident, string VartOrdernr, string AnvID, bool addToOrder) {
            return base.Channel.updateShrep(ident, VartOrdernr, AnvID, addToOrder);
        }
        
        public System.Threading.Tasks.Task<GaskMan.SmManager.ErrorCL> updateShrepAsync(string ident, string VartOrdernr, string AnvID, bool addToOrder) {
            return base.Channel.updateShrepAsync(ident, VartOrdernr, AnvID, addToOrder);
        }
        
        public int countReparator(string vart_ordernr, string ident) {
            return base.Channel.countReparator(vart_ordernr, ident);
        }
        
        public System.Threading.Tasks.Task<int> countReparatorAsync(string vart_ordernr, string ident) {
            return base.Channel.countReparatorAsync(vart_ordernr, ident);
        }
        
        public GaskMan.SmManager.ServHuvCL updateAllRep(string VartOrdernr, bool allRep, string ident) {
            return base.Channel.updateAllRep(VartOrdernr, allRep, ident);
        }
        
        public System.Threading.Tasks.Task<GaskMan.SmManager.ServHuvCL> updateAllRepAsync(string VartOrdernr, bool allRep, string ident) {
            return base.Channel.updateAllRepAsync(VartOrdernr, allRep, ident);
        }
        
        public GaskMan.SmManager.OrderArtCL[] getOrderArt(int orderArtId, string vartOrdernr, string ident) {
            return base.Channel.getOrderArt(orderArtId, vartOrdernr, ident);
        }
        
        public System.Threading.Tasks.Task<GaskMan.SmManager.OrderArtCL[]> getOrderArtAsync(int orderArtId, string vartOrdernr, string ident) {
            return base.Channel.getOrderArtAsync(orderArtId, vartOrdernr, ident);
        }
        
        public GaskMan.SmManager.OrderArtCL checkoutOrderArt(string ident, GaskMan.SmManager.OrderArtCL oa) {
            return base.Channel.checkoutOrderArt(ident, oa);
        }
        
        public System.Threading.Tasks.Task<GaskMan.SmManager.OrderArtCL> checkoutOrderArtAsync(string ident, GaskMan.SmManager.OrderArtCL oa) {
            return base.Channel.checkoutOrderArtAsync(ident, oa);
        }
        
        public GaskMan.SmManager.OrderArtCL[] getCheckoutableArticles(string ident, string artnr) {
            return base.Channel.getCheckoutableArticles(ident, artnr);
        }
        
        public System.Threading.Tasks.Task<GaskMan.SmManager.OrderArtCL[]> getCheckoutableArticlesAsync(string ident, string artnr) {
            return base.Channel.getCheckoutableArticlesAsync(ident, artnr);
        }
        
        public GaskMan.SmManager.ErrorCL genCompStoreData(string ident, string vartOrdernr) {
            return base.Channel.genCompStoreData(ident, vartOrdernr);
        }
        
        public System.Threading.Tasks.Task<GaskMan.SmManager.ErrorCL> genCompStoreDataAsync(string ident, string vartOrdernr) {
            return base.Channel.genCompStoreDataAsync(ident, vartOrdernr);
        }
        
        public decimal countArtForStorageAut(string ident, string vartOrdernr) {
            return base.Channel.countArtForStorageAut(ident, vartOrdernr);
        }
        
        public System.Threading.Tasks.Task<decimal> countArtForStorageAutAsync(string ident, string vartOrdernr) {
            return base.Channel.countArtForStorageAutAsync(ident, vartOrdernr);
        }
        
        public string getNextOrderNumber() {
            return base.Channel.getNextOrderNumber();
        }
        
        public System.Threading.Tasks.Task<string> getNextOrderNumberAsync() {
            return base.Channel.getNextOrderNumberAsync();
        }
        
        public GaskMan.SmManager.MomskodCL[] getMomskoder(string ident) {
            return base.Channel.getMomskoder(ident);
        }
        
        public System.Threading.Tasks.Task<GaskMan.SmManager.MomskodCL[]> getMomskoderAsync(string ident) {
            return base.Channel.getMomskoderAsync(ident);
        }
        
        public int countOrderArtRows(string ident, string vartOrdernr) {
            return base.Channel.countOrderArtRows(ident, vartOrdernr);
        }
        
        public System.Threading.Tasks.Task<int> countOrderArtRowsAsync(string ident, string vartOrdernr) {
            return base.Channel.countOrderArtRowsAsync(ident, vartOrdernr);
        }
        
        public GaskMan.SmManager.ErrorCL calculateCiOrderArt(string ident, string vartOrdernr) {
            return base.Channel.calculateCiOrderArt(ident, vartOrdernr);
        }
        
        public System.Threading.Tasks.Task<GaskMan.SmManager.ErrorCL> calculateCiOrderArtAsync(string ident, string vartOrdernr) {
            return base.Channel.calculateCiOrderArtAsync(ident, vartOrdernr);
        }
        
        public GaskMan.SmManager.ErrorCL setTempCiAntal(string ident, int orderArtId, decimal newValue) {
            return base.Channel.setTempCiAntal(ident, orderArtId, newValue);
        }
        
        public System.Threading.Tasks.Task<GaskMan.SmManager.ErrorCL> setTempCiAntalAsync(string ident, int orderArtId, decimal newValue) {
            return base.Channel.setTempCiAntalAsync(ident, orderArtId, newValue);
        }
        
        public GaskMan.SmManager.ErrorCL commitTempCiAntal(string ident, string vartOrdernr) {
            return base.Channel.commitTempCiAntal(ident, vartOrdernr);
        }
        
        public System.Threading.Tasks.Task<GaskMan.SmManager.ErrorCL> commitTempCiAntalAsync(string ident, string vartOrdernr) {
            return base.Channel.commitTempCiAntalAsync(ident, vartOrdernr);
        }
        
        public GaskMan.SmManager.ErrorCL exportTime(string vartOrdernr) {
            return base.Channel.exportTime(vartOrdernr);
        }
        
        public System.Threading.Tasks.Task<GaskMan.SmManager.ErrorCL> exportTimeAsync(string vartOrdernr) {
            return base.Channel.exportTimeAsync(vartOrdernr);
        }
        
        public GaskMan.SmManager.OrderArtCL getCheckoutableArticle(string ident, string artnr) {
            return base.Channel.getCheckoutableArticle(ident, artnr);
        }
        
        public System.Threading.Tasks.Task<GaskMan.SmManager.OrderArtCL> getCheckoutableArticleAsync(string ident, string artnr) {
            return base.Channel.getCheckoutableArticleAsync(ident, artnr);
        }
        
        public System.Collections.Generic.KeyValuePair<int, string>[] getUcArtListSelection(string ident) {
            return base.Channel.getUcArtListSelection(ident);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.KeyValuePair<int, string>[]> getUcArtListSelectionAsync(string ident) {
            return base.Channel.getUcArtListSelectionAsync(ident);
        }
        
        public GaskMan.SmManager.OrderArtListCL[] getOutcheckedList(string ident, int listType) {
            return base.Channel.getOutcheckedList(ident, listType);
        }
        
        public System.Threading.Tasks.Task<GaskMan.SmManager.OrderArtListCL[]> getOutcheckedListAsync(string ident, int listType) {
            return base.Channel.getOutcheckedListAsync(ident, listType);
        }
        
        public System.Collections.Generic.KeyValuePair<int, string>[] getExportListSelection(string ident) {
            return base.Channel.getExportListSelection(ident);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.KeyValuePair<int, string>[]> getExportListSelectionAsync(string ident) {
            return base.Channel.getExportListSelectionAsync(ident);
        }
        
        public GaskMan.SmManager.OrderArtCL[] getExportFullList(string ident, string vartOrdernr, int listType) {
            return base.Channel.getExportFullList(ident, vartOrdernr, listType);
        }
        
        public System.Threading.Tasks.Task<GaskMan.SmManager.OrderArtCL[]> getExportFullListAsync(string ident, string vartOrdernr, int listType) {
            return base.Channel.getExportFullListAsync(ident, vartOrdernr, listType);
        }
        
        public void logMessage(int logLevel, string message, string messageDescr) {
            base.Channel.logMessage(logLevel, message, messageDescr);
        }
        
        public System.Threading.Tasks.Task logMessageAsync(int logLevel, string message, string messageDescr) {
            return base.Channel.logMessageAsync(logLevel, message, messageDescr);
        }
        
        public GaskMan.SmManager.LoginAdm GLogin(GaskMan.SmManager.LoginAdm login) {
            return base.Channel.GLogin(login);
        }
        
        public System.Threading.Tasks.Task<GaskMan.SmManager.LoginAdm> GLoginAsync(GaskMan.SmManager.LoginAdm login) {
            return base.Channel.GLoginAsync(login);
        }
        
        public GaskMan.SmManager.gMaterialCL[] getAllMaterial(string ident) {
            return base.Channel.getAllMaterial(ident);
        }
        
        public System.Threading.Tasks.Task<GaskMan.SmManager.gMaterialCL[]> getAllMaterialAsync(string ident) {
            return base.Channel.getAllMaterialAsync(ident);
        }
        
        public GaskMan.SmManager.gMaterialCL[] getMaterial(string ident, int materialId) {
            return base.Channel.getMaterial(ident, materialId);
        }
        
        public System.Threading.Tasks.Task<GaskMan.SmManager.gMaterialCL[]> getMaterialAsync(string ident, int materialId) {
            return base.Channel.getMaterialAsync(ident, materialId);
        }
        
        public GaskMan.SmManager.gMaterialCL saveMaterial(string ident, GaskMan.SmManager.gMaterialCL mat) {
            return base.Channel.saveMaterial(ident, mat);
        }
        
        public System.Threading.Tasks.Task<GaskMan.SmManager.gMaterialCL> saveMaterialAsync(string ident, GaskMan.SmManager.gMaterialCL mat) {
            return base.Channel.saveMaterialAsync(ident, mat);
        }
        
        public GaskMan.SmManager.gMaterialSizeCL[] getMaterialSize(string ident, int materialSizeId) {
            return base.Channel.getMaterialSize(ident, materialSizeId);
        }
        
        public System.Threading.Tasks.Task<GaskMan.SmManager.gMaterialSizeCL[]> getMaterialSizeAsync(string ident, int materialSizeId) {
            return base.Channel.getMaterialSizeAsync(ident, materialSizeId);
        }
        
        public GaskMan.SmManager.gMaterialSizeCL saveMaterialSize(string ident, GaskMan.SmManager.gMaterialSizeCL matSize) {
            return base.Channel.saveMaterialSize(ident, matSize);
        }
        
        public System.Threading.Tasks.Task<GaskMan.SmManager.gMaterialSizeCL> saveMaterialSizeAsync(string ident, GaskMan.SmManager.gMaterialSizeCL matSize) {
            return base.Channel.saveMaterialSizeAsync(ident, matSize);
        }
        
        public GaskMan.SmManager.gMaterialThicknCL[] getMaterialThickn(string ident, int materialThicknId) {
            return base.Channel.getMaterialThickn(ident, materialThicknId);
        }
        
        public System.Threading.Tasks.Task<GaskMan.SmManager.gMaterialThicknCL[]> getMaterialThicknAsync(string ident, int materialThicknId) {
            return base.Channel.getMaterialThicknAsync(ident, materialThicknId);
        }
        
        public GaskMan.SmManager.gMaterialThicknCL saveMaterialThickness(string ident, GaskMan.SmManager.gMaterialThicknCL thickn) {
            return base.Channel.saveMaterialThickness(ident, thickn);
        }
        
        public System.Threading.Tasks.Task<GaskMan.SmManager.gMaterialThicknCL> saveMaterialThicknessAsync(string ident, GaskMan.SmManager.gMaterialThicknCL thickn) {
            return base.Channel.saveMaterialThicknessAsync(ident, thickn);
        }
        
        public GaskMan.SmManager.gWorkingCostCL getWorkingCosts(string ident) {
            return base.Channel.getWorkingCosts(ident);
        }
        
        public System.Threading.Tasks.Task<GaskMan.SmManager.gWorkingCostCL> getWorkingCostsAsync(string ident) {
            return base.Channel.getWorkingCostsAsync(ident);
        }
        
        public GaskMan.SmManager.gWorkingCostCL saveWorkingCost(string ident, GaskMan.SmManager.gWorkingCostCL wc) {
            return base.Channel.saveWorkingCost(ident, wc);
        }
        
        public System.Threading.Tasks.Task<GaskMan.SmManager.gWorkingCostCL> saveWorkingCostAsync(string ident, GaskMan.SmManager.gWorkingCostCL wc) {
            return base.Channel.saveWorkingCostAsync(ident, wc);
        }
        
        public GaskMan.SmManager.gGasketCL[] getGasket(string ident, int gasketId) {
            return base.Channel.getGasket(ident, gasketId);
        }
        
        public System.Threading.Tasks.Task<GaskMan.SmManager.gGasketCL[]> getGasketAsync(string ident, int gasketId) {
            return base.Channel.getGasketAsync(ident, gasketId);
        }
        
        public GaskMan.SmManager.gGasketCL saveGasket(string ident, GaskMan.SmManager.gGasketCL gasket) {
            return base.Channel.saveGasket(ident, gasket);
        }
        
        public System.Threading.Tasks.Task<GaskMan.SmManager.gGasketCL> saveGasketAsync(string ident, GaskMan.SmManager.gGasketCL gasket) {
            return base.Channel.saveGasketAsync(ident, gasket);
        }
        
        public GaskMan.SmManager.ErrorCL deleteGasket(string ident, int gasketId) {
            return base.Channel.deleteGasket(ident, gasketId);
        }
        
        public System.Threading.Tasks.Task<GaskMan.SmManager.ErrorCL> deleteGasketAsync(string ident, int gasketId) {
            return base.Channel.deleteGasketAsync(ident, gasketId);
        }
        
        public System.Collections.Generic.KeyValuePair<int, string>[] getGasketType(string ident) {
            return base.Channel.getGasketType(ident);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.KeyValuePair<int, string>[]> getGasketTypeAsync(string ident) {
            return base.Channel.getGasketTypeAsync(ident);
        }
        
        public GaskMan.SmManager.gReuseMatCL[] getReuseMaterial(string ident, int reuseMatId) {
            return base.Channel.getReuseMaterial(ident, reuseMatId);
        }
        
        public System.Threading.Tasks.Task<GaskMan.SmManager.gReuseMatCL[]> getReuseMaterialAsync(string ident, int reuseMatId) {
            return base.Channel.getReuseMaterialAsync(ident, reuseMatId);
        }
        
        public GaskMan.SmManager.gReuseMatCL saveReuseMaterial(string ident, GaskMan.SmManager.gReuseMatCL reuseMat) {
            return base.Channel.saveReuseMaterial(ident, reuseMat);
        }
        
        public System.Threading.Tasks.Task<GaskMan.SmManager.gReuseMatCL> saveReuseMaterialAsync(string ident, GaskMan.SmManager.gReuseMatCL reuseMat) {
            return base.Channel.saveReuseMaterialAsync(ident, reuseMat);
        }
        
        public GaskMan.SmManager.gReuseMatCL getReusablePercentage(string ident, decimal innerSize) {
            return base.Channel.getReusablePercentage(ident, innerSize);
        }
        
        public System.Threading.Tasks.Task<GaskMan.SmManager.gReuseMatCL> getReusablePercentageAsync(string ident, decimal innerSize) {
            return base.Channel.getReusablePercentageAsync(ident, innerSize);
        }
        
        public GaskMan.SmManager.ErrorCL resetExport(string aVart_ordernr, string ident) {
            return base.Channel.resetExport(aVart_ordernr, ident);
        }
        
        public System.Threading.Tasks.Task<GaskMan.SmManager.ErrorCL> resetExportAsync(string aVart_ordernr, string ident) {
            return base.Channel.resetExportAsync(aVart_ordernr, ident);
        }
        
        public GaskMan.SmManager.resendOrderArtCL resendxOrderArt(string aVart_ordernr, int noToResend, string ident) {
            return base.Channel.resendxOrderArt(aVart_ordernr, noToResend, ident);
        }
        
        public System.Threading.Tasks.Task<GaskMan.SmManager.resendOrderArtCL> resendxOrderArtAsync(string aVart_ordernr, int noToResend, string ident) {
            return base.Channel.resendxOrderArtAsync(aVart_ordernr, noToResend, ident);
        }
        
        public GaskMan.SmManager.pyramidChangeCL[] getPyramidChange(string ident, string vartOrdernr) {
            return base.Channel.getPyramidChange(ident, vartOrdernr);
        }
        
        public System.Threading.Tasks.Task<GaskMan.SmManager.pyramidChangeCL[]> getPyramidChangeAsync(string ident, string vartOrdernr) {
            return base.Channel.getPyramidChangeAsync(ident, vartOrdernr);
        }
    }
}
